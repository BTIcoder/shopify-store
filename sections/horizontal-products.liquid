{% comment %}
  Horizontal Products Carousel - Single row of products with navigation
  Displays products from multiple collections in one horizontal scrolling row
{% endcomment %}

<section class="horizontal-products-section">
  <div class="container">
    <div class="section-header">
      <h2 class="section-title">{{ section.settings.heading | default: 'Featured Products' }}</h2>
      {% if section.settings.description != blank %}
        <p class="section-description">{{ section.settings.description }}</p>
      {% endif %}
    </div>
    
    <div class="horizontal-carousel">
      <button class="nav-arrow nav-prev" aria-label="Previous products">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
          <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
      
      <div class="products-viewport">
        <div class="products-slider">
          {% assign all_products = '' %}
          {% for block in section.blocks %}
            {% if block.type == 'collection' %}
              {% assign collection = collections[block.settings.collection] %}
              {% if collection and collection.products.size > 0 %}
                {% for product in collection.products limit: block.settings.product_limit %}
                  <div class="product-slide" {{ block.shopify_attributes }}>
                    <div class="product-card">
                      <div class="product-image-container">
                        <a href="{{ product.url }}" class="product-link">
                          {% if product.featured_image %}
                            {{ product.featured_image | image_url: width: 300 | image_tag: 
                              loading: 'lazy',
                              alt: product.featured_image.alt | default: product.title,
                              class: 'product-image'
                            }}
                          {% else %}
                            <div class="product-image-placeholder">
                              <svg width="40" height="40" viewBox="0 0 24 24" fill="none">
                                <rect x="3" y="3" width="18" height="18" rx="2" ry="2" stroke="currentColor" stroke-width="1.5"/>
                                <circle cx="8.5" cy="8.5" r="1.5" stroke="currentColor" stroke-width="1.5"/>
                                <polyline points="21,15 16,10 5,21" stroke="currentColor" stroke-width="1.5"/>
                              </svg>
                            </div>
                          {% endif %}
                        </a>
                        
                        {% if product.compare_at_price > product.price %}
                          <div class="product-badge sale">Sale</div>
                        {% elsif product.available == false %}
                          <div class="product-badge sold-out">Sold Out</div>
                        {% endif %}
                        
                        <div class="quick-view-overlay">
                          <button class="quick-view-btn" data-product-id="{{ product.id }}">
                            Quick view
                          </button>
                        </div>
                      </div>
                      
                      <div class="product-details">
                        {% if block.settings.show_vendor and product.vendor != blank %}
                          <div class="product-vendor">{{ product.vendor }}</div>
                        {% endif %}
                        
                        <h3 class="product-title">
                          <a href="{{ product.url }}">{{ product.title | truncate: 45 }}</a>
                        </h3>
                        
                        <div class="product-price">
                          {% if product.compare_at_price > product.price %}
                            <span class="price-current">{{ product.price | money }}</span>
                            <span class="price-original">{{ product.compare_at_price | money }}</span>
                          {% else %}
                            <span class="price-current">{{ product.price | money }}</span>
                          {% endif %}
                        </div>
                        
                        {% if product.variants.size > 1 %}
                          <div class="product-variants">
                            Available in {{ product.variants.size }} colors
                          </div>
                        {% endif %}
                      </div>
                    </div>
                  </div>
                {% endfor %}
              {% endif %}
            {% endif %}
          {% endfor %}
        </div>
      </div>
      
      <button class="nav-arrow nav-next" aria-label="Next products">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
          <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div>
  </div>
</section>

<style>
.horizontal-products-section {
  padding: 50px 0;
  background: #fff;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
}

.section-header {
  text-align: center;
  margin-bottom: 40px;
}

.section-title {
  font-family: 'Montserrat', sans-serif;
  font-size: 2rem;
  font-weight: 700;
  color: #2c1810;
  margin: 0 0 12px 0;
  text-transform: uppercase;
  letter-spacing: 0.02em;
}

.section-description {
  font-family: 'Lato', sans-serif;
  font-size: 1rem;
  color: #666;
  margin: 0;
  max-width: 600px;
  margin: 0 auto;
}

.horizontal-carousel {
  position: relative;
  display: flex;
  align-items: center;
  gap: 20px;
}

.nav-arrow {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  background: #fff;
  border: 2px solid #e0e0e0;
  color: #666;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  z-index: 10;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.nav-arrow:hover {
  border-color: #2c1810;
  color: #2c1810;
  background: #f8f8f8;
  transform: scale(1.05);
}

.nav-arrow:disabled {
  opacity: 0.3;
  cursor: not-allowed;
  transform: none;
  border-color: #e0e0e0;
  color: #ccc;
}

.products-viewport {
  flex: 1;
  overflow: hidden;
  position: relative;
}

.products-slider {
  display: flex;
  gap: 20px;
  transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  will-change: transform;
}

.product-slide {
  flex: 0 0 auto;
  width: 220px;
}

.product-card {
  background: #fff;
  border-radius: 8px;
  overflow: hidden;
  transition: all 0.3s ease;
  border: 1px solid #f0f0f0;
  height: 100%;
  display: flex;
  flex-direction: column;
}

.product-card:hover {
  transform: translateY(-3px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.12);
  border-color: #e0e0e0;
}

.product-image-container {
  position: relative;
  aspect-ratio: 1;
  overflow: hidden;
  background: #f8f8f8;
}

.product-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.3s ease;
}

.product-card:hover .product-image {
  transform: scale(1.03);
}

.product-image-placeholder {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #ccc;
  background: #f5f5f5;
}

.product-badge {
  position: absolute;
  top: 10px;
  left: 10px;
  padding: 4px 8px;
  border-radius: 4px;
  font-family: 'Montserrat', sans-serif;
  font-size: 0.7rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.02em;
  z-index: 2;
}

.product-badge.sale {
  background: #e74c3c;
  color: #fff;
}

.product-badge.sold-out {
  background: #95a5a6;
  color: #fff;
}

.quick-view-overlay {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  background: linear-gradient(transparent, rgba(0, 0, 0, 0.7));
  padding: 20px 15px 15px;
  transform: translateY(100%);
  transition: transform 0.3s ease;
}

.product-card:hover .quick-view-overlay {
  transform: translateY(0);
}

.quick-view-btn {
  width: 100%;
  background: #fff;
  color: #2c1810;
  border: none;
  padding: 8px 12px;
  border-radius: 4px;
  font-family: 'Montserrat', sans-serif;
  font-size: 0.8rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.02em;
  cursor: pointer;
  transition: all 0.3s ease;
}

.quick-view-btn:hover {
  background: #2c1810;
  color: #fff;
}

.product-details {
  padding: 15px;
  flex: 1;
  display: flex;
  flex-direction: column;
}

.product-vendor {
  font-family: 'Lato', sans-serif;
  font-size: 0.75rem;
  color: #888;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  margin-bottom: 5px;
}

.product-title {
  margin: 0 0 8px 0;
  flex: 1;
}

.product-title a {
  font-family: 'Montserrat', sans-serif;
  font-size: 0.9rem;
  font-weight: 600;
  color: #2c1810;
  text-decoration: none;
  line-height: 1.3;
  transition: color 0.3s ease;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.product-title a:hover {
  color: #666;
}

.product-price {
  margin-bottom: 8px;
}

.price-current {
  font-family: 'Montserrat', sans-serif;
  font-size: 1rem;
  font-weight: 700;
  color: #2c1810;
}

.price-original {
  font-family: 'Montserrat', sans-serif;
  font-size: 0.85rem;
  color: #999;
  text-decoration: line-through;
  margin-left: 6px;
}

.product-variants {
  font-family: 'Lato', sans-serif;
  font-size: 0.75rem;
  color: #666;
  margin-top: auto;
}

/* Responsive Design */
@media (max-width: 768px) {
  .horizontal-products-section {
    padding: 30px 0;
  }
  
  .container {
    padding: 0 15px;
  }
  
  .section-title {
    font-size: 1.6rem;
  }
  
  .horizontal-carousel {
    gap: 15px;
  }
  
  .nav-arrow {
    width: 44px;
    height: 44px;
  }
  
  .products-slider {
    gap: 15px;
  }
  
  .product-slide {
    width: 180px;
  }
  
  .quick-view-overlay {
    display: none;
  }
}

@media (max-width: 480px) {
  .section-title {
    font-size: 1.4rem;
  }
  
  .horizontal-carousel {
    gap: 10px;
  }
  
  .nav-arrow {
    width: 40px;
    height: 40px;
  }
  
  .products-slider {
    gap: 12px;
  }
  
  .product-slide {
    width: 160px;
  }
  
  .product-details {
    padding: 12px;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const carousel = document.querySelector('.horizontal-carousel');
  const slider = carousel.querySelector('.products-slider');
  const prevBtn = carousel.querySelector('.nav-prev');
  const nextBtn = carousel.querySelector('.nav-next');
  const slides = slider.querySelectorAll('.product-slide');
  
  if (slides.length === 0) return;
  
  let currentIndex = 0;
  const slideWidth = slides[0].offsetWidth + 20; // slide width + gap
  const viewport = carousel.querySelector('.products-viewport');
  const visibleSlides = Math.floor(viewport.offsetWidth / slideWidth);
  const maxIndex = Math.max(0, slides.length - visibleSlides);
  
  function updateCarousel() {
    const translateX = -currentIndex * slideWidth;
    slider.style.transform = `translateX(${translateX}px)`;
    
    prevBtn.disabled = currentIndex === 0;
    nextBtn.disabled = currentIndex >= maxIndex;
  }
  
  function goNext() {
    if (currentIndex < maxIndex) {
      currentIndex = Math.min(currentIndex + visibleSlides, maxIndex);
      updateCarousel();
    }
  }
  
  function goPrev() {
    if (currentIndex > 0) {
      currentIndex = Math.max(currentIndex - visibleSlides, 0);
      updateCarousel();
    }
  }
  
  nextBtn.addEventListener('click', goNext);
  prevBtn.addEventListener('click', goPrev);
  
  // Touch/swipe support
  let startX = 0;
  let isDragging = false;
  let startTransform = 0;
  
  slider.addEventListener('touchstart', (e) => {
    startX = e.touches[0].clientX;
    isDragging = true;
    startTransform = currentIndex * slideWidth;
  });
  
  slider.addEventListener('touchmove', (e) => {
    if (!isDragging) return;
    
    const currentX = e.touches[0].clientX;
    const diff = startX - currentX;
    const newTransform = startTransform + diff;
    
    slider.style.transform = `translateX(-${newTransform}px)`;
    e.preventDefault();
  });
  
  slider.addEventListener('touchend', (e) => {
    if (!isDragging) return;
    
    const endX = e.changedTouches[0].clientX;
    const diff = startX - endX;
    
    if (Math.abs(diff) > 50) {
      if (diff > 0) {
        goNext();
      } else {
        goPrev();
      }
    } else {
      updateCarousel();
    }
    
    isDragging = false;
  });
  
  // Initialize
  updateCarousel();
  
  // Update on window resize
  let resizeTimeout;
  window.addEventListener('resize', () => {
    clearTimeout(resizeTimeout);
    resizeTimeout = setTimeout(() => {
      const newVisibleSlides = Math.floor(viewport.offsetWidth / slideWidth);
      const newMaxIndex = Math.max(0, slides.length - newVisibleSlides);
      
      if (currentIndex > newMaxIndex) {
        currentIndex = newMaxIndex;
      }
      
      updateCarousel();
    }, 250);
  });
});
</script>

{% schema %}
{
  "name": "Horizontal Products",
  "max_blocks": 5,
  "settings": [
    {
      "type": "header",
      "content": "Section Settings"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Section Heading",
      "default": "Featured Products"
    },
    {
      "type": "textarea",
      "id": "description",
      "label": "Section Description"
    }
  ],
  "blocks": [
    {
      "type": "collection",
      "name": "Product Collection",
      "settings": [
        {
          "type": "collection",
          "id": "collection",
          "label": "Collection"
        },
        {
          "type": "range",
          "id": "product_limit",
          "min": 1,
          "max": 12,
          "step": 1,
          "label": "Number of products",
          "default": 6
        },
        {
          "type": "checkbox",
          "id": "show_vendor",
          "label": "Show product vendor",
          "default": false
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Horizontal Products",
      "blocks": [
        {
          "type": "collection"
        }
      ]
    }
  ]
}
{% endschema %}