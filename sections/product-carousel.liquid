{% comment %}
  Product Carousel - Horizontal scrolling product display
  Shows actual products from collections with navigation arrows
{% endcomment %}

<section class="product-carousel-section">
  <div class="container">
    {% for block in section.blocks %}
      {% if block.type == 'category' %}
        {% assign collection = collections[block.settings.collection] %}
        {% if collection and collection.products.size > 0 %}
          <div class="category-section" {{ block.shopify_attributes }}>
            <div class="category-header">
              <div class="category-info">
                <h2 class="category-title">{{ block.settings.title | default: collection.title }}</h2>
                <p class="category-description">{{ block.settings.description | default: collection.description | truncate: 120 }}</p>
              </div>
              <a href="{{ collection.url }}" class="view-all-btn">
                View All
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                  <path d="M5 12h14M12 5l7 7-7 7" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
              </a>
            </div>
            
            <div class="product-carousel" data-carousel="{{ forloop.index }}">
              <button class="carousel-btn carousel-prev" aria-label="Previous products">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                  <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
              </button>
              
              <div class="products-container">
                <div class="products-track">
                  {% for product in collection.products limit: 12 %}
                    <div class="product-card">
                      <div class="product-image">
                        <a href="{{ product.url }}">
                          {% if product.featured_image %}
                            {{ product.featured_image | image_url: width: 300 | image_tag: 
                              loading: 'lazy',
                              alt: product.featured_image.alt | default: product.title,
                              class: 'product-img'
                            }}
                          {% else %}
                            <div class="product-placeholder">
                              <svg width="60" height="60" viewBox="0 0 24 24" fill="none">
                                <rect x="3" y="3" width="18" height="18" rx="2" ry="2" stroke="currentColor" stroke-width="2"/>
                                <circle cx="8.5" cy="8.5" r="1.5" stroke="currentColor" stroke-width="2"/>
                                <polyline points="21,15 16,10 5,21" stroke="currentColor" stroke-width="2"/>
                              </svg>
                            </div>
                          {% endif %}
                        </a>
                        
                        {% if product.compare_at_price > product.price %}
                          <div class="product-badge sale-badge">Sale</div>
                        {% elsif product.available == false %}
                          <div class="product-badge sold-out-badge">Sold Out</div>
                        {% endif %}
                        
                        <button class="quick-view-btn" data-product-id="{{ product.id }}">
                          Quick view
                        </button>
                      </div>
                      
                      <div class="product-info">
                        <h3 class="product-title">
                          <a href="{{ product.url }}">{{ product.title | truncate: 50 }}</a>
                        </h3>
                        
                        {% if product.vendor and block.settings.show_vendor %}
                          <p class="product-vendor">{{ product.vendor }}</p>
                        {% endif %}
                        
                        <div class="product-price">
                          {% if product.compare_at_price > product.price %}
                            <span class="price-sale">{{ product.price | money }}</span>
                            <span class="price-compare">{{ product.compare_at_price | money }}</span>
                          {% else %}
                            <span class="price-regular">{{ product.price | money }}</span>
                          {% endif %}
                        </div>
                        
                        {% if product.variants.size > 1 %}
                          <div class="product-variants">
                            <span class="variants-count">{{ product.variants.size }} variants</span>
                          </div>
                        {% endif %}
                      </div>
                    </div>
                  {% endfor %}
                </div>
              </div>
              
              <button class="carousel-btn carousel-next" aria-label="Next products">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                  <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
              </button>
            </div>
          </div>
        {% endif %}
      {% endif %}
    {% endfor %}
  </div>
</section>

<style>
.product-carousel-section {
  padding: 60px 0;
  background: #fff;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
}

.category-section {
  margin-bottom: 60px;
}

.category-section:last-child {
  margin-bottom: 0;
}

.category-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
  margin-bottom: 30px;
  padding-bottom: 20px;
  border-bottom: 1px solid #e5e5e5;
}

.category-info {
  flex: 1;
}

.category-title {
  font-family: 'Montserrat', sans-serif;
  font-size: 1.8rem;
  font-weight: 700;
  color: #2c1810;
  margin: 0 0 8px 0;
  text-transform: uppercase;
  letter-spacing: 0.02em;
}

.category-description {
  font-family: 'Lato', sans-serif;
  font-size: 1rem;
  color: #666;
  margin: 0;
  line-height: 1.5;
}

.view-all-btn {
  font-family: 'Montserrat', sans-serif;
  font-size: 0.9rem;
  font-weight: 600;
  color: #2c1810;
  text-decoration: none;
  display: flex;
  align-items: center;
  gap: 6px;
  padding: 10px 20px;
  border: 2px solid #2c1810;
  border-radius: 6px;
  transition: all 0.3s ease;
  text-transform: uppercase;
  letter-spacing: 0.02em;
}

.view-all-btn:hover {
  background: #2c1810;
  color: #fff;
  transform: translateX(3px);
}

.view-all-btn svg {
  transition: transform 0.3s ease;
}

.view-all-btn:hover svg {
  transform: translateX(2px);
}

.product-carousel {
  position: relative;
  display: flex;
  align-items: center;
  gap: 15px;
}

.carousel-btn {
  width: 44px;
  height: 44px;
  border-radius: 50%;
  background: #fff;
  border: 2px solid #e5e5e5;
  color: #666;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  z-index: 2;
}

.carousel-btn:hover {
  border-color: #2c1810;
  color: #2c1810;
  background: #f8f8f8;
  transform: scale(1.05);
}

.carousel-btn:disabled {
  opacity: 0.3;
  cursor: not-allowed;
  transform: none;
}

.products-container {
  flex: 1;
  overflow: hidden;
  position: relative;
}

.products-track {
  display: flex;
  gap: 20px;
  transition: transform 0.4s ease;
  will-change: transform;
}

.product-card {
  min-width: 250px;
  background: #fff;
  border-radius: 12px;
  overflow: hidden;
  transition: all 0.3s ease;
  border: 1px solid #f0f0f0;
  position: relative;
}

.product-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  border-color: #e0e0e0;
}

.product-image {
  position: relative;
  aspect-ratio: 1;
  overflow: hidden;
  background: #f8f8f8;
}

.product-img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.3s ease;
}

.product-card:hover .product-img {
  transform: scale(1.05);
}

.product-placeholder {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #ccc;
  background: #f5f5f5;
}

.product-badge {
  position: absolute;
  top: 12px;
  left: 12px;
  padding: 4px 8px;
  border-radius: 4px;
  font-family: 'Montserrat', sans-serif;
  font-size: 0.7rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.02em;
  z-index: 1;
}

.sale-badge {
  background: #e74c3c;
  color: #fff;
}

.sold-out-badge {
  background: #95a5a6;
  color: #fff;
}

.quick-view-btn {
  position: absolute;
  bottom: 12px;
  left: 50%;
  transform: translateX(-50%) translateY(100%);
  background: #2c1810;
  color: #fff;
  border: none;
  padding: 8px 16px;
  border-radius: 6px;
  font-family: 'Montserrat', sans-serif;
  font-size: 0.8rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.02em;
  cursor: pointer;
  transition: all 0.3s ease;
  opacity: 0;
  z-index: 2;
}

.product-card:hover .quick-view-btn {
  transform: translateX(-50%) translateY(0);
  opacity: 1;
}

.quick-view-btn:hover {
  background: #1a0f0a;
}

.product-info {
  padding: 20px;
}

.product-title {
  margin: 0 0 8px 0;
}

.product-title a {
  font-family: 'Montserrat', sans-serif;
  font-size: 0.95rem;
  font-weight: 600;
  color: #2c1810;
  text-decoration: none;
  line-height: 1.3;
  transition: color 0.3s ease;
}

.product-title a:hover {
  color: #666;
}

.product-vendor {
  font-family: 'Lato', sans-serif;
  font-size: 0.8rem;
  color: #888;
  margin: 0 0 8px 0;
  text-transform: uppercase;
  letter-spacing: 0.02em;
}

.product-price {
  margin: 0 0 8px 0;
}

.price-regular,
.price-sale {
  font-family: 'Montserrat', sans-serif;
  font-size: 1rem;
  font-weight: 700;
  color: #2c1810;
}

.price-compare {
  font-family: 'Montserrat', sans-serif;
  font-size: 0.9rem;
  color: #999;
  text-decoration: line-through;
  margin-left: 8px;
}

.product-variants {
  margin: 0;
}

.variants-count {
  font-family: 'Lato', sans-serif;
  font-size: 0.8rem;
  color: #666;
  font-style: italic;
}

/* Responsive Design */
@media (max-width: 768px) {
  .product-carousel-section {
    padding: 40px 0;
  }
  
  .container {
    padding: 0 15px;
  }
  
  .category-header {
    flex-direction: column;
    align-items: flex-start;
    gap: 15px;
  }
  
  .category-title {
    font-size: 1.5rem;
  }
  
  .view-all-btn {
    align-self: flex-end;
  }
  
  .product-carousel {
    gap: 10px;
  }
  
  .carousel-btn {
    width: 40px;
    height: 40px;
  }
  
  .products-track {
    gap: 15px;
  }
  
  .product-card {
    min-width: 200px;
  }
  
  .product-info {
    padding: 15px;
  }
  
  .quick-view-btn {
    display: none;
  }
}

@media (max-width: 480px) {
  .category-section {
    margin-bottom: 40px;
  }
  
  .category-title {
    font-size: 1.3rem;
  }
  
  .product-card {
    min-width: 180px;
  }
  
  .carousel-btn {
    width: 36px;
    height: 36px;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const carousels = document.querySelectorAll('.product-carousel');
  
  carousels.forEach((carousel, index) => {
    const track = carousel.querySelector('.products-track');
    const prevBtn = carousel.querySelector('.carousel-prev');
    const nextBtn = carousel.querySelector('.carousel-next');
    const cards = track.querySelectorAll('.product-card');
    
    if (cards.length === 0) return;
    
    let currentIndex = 0;
    const cardWidth = cards[0].offsetWidth + 20; // card width + gap
    const visibleCards = Math.floor(carousel.querySelector('.products-container').offsetWidth / cardWidth);
    const maxIndex = Math.max(0, cards.length - visibleCards);
    
    function updateCarousel() {
      const translateX = -currentIndex * cardWidth;
      track.style.transform = `translateX(${translateX}px)`;
      
      prevBtn.disabled = currentIndex === 0;
      nextBtn.disabled = currentIndex >= maxIndex;
    }
    
    function goToNext() {
      if (currentIndex < maxIndex) {
        currentIndex++;
        updateCarousel();
      }
    }
    
    function goToPrev() {
      if (currentIndex > 0) {
        currentIndex--;
        updateCarousel();
      }
    }
    
    nextBtn.addEventListener('click', goToNext);
    prevBtn.addEventListener('click', goToPrev);
    
    // Touch/swipe support
    let startX = 0;
    let isDragging = false;
    
    track.addEventListener('touchstart', (e) => {
      startX = e.touches[0].clientX;
      isDragging = true;
    });
    
    track.addEventListener('touchmove', (e) => {
      if (!isDragging) return;
      e.preventDefault();
    });
    
    track.addEventListener('touchend', (e) => {
      if (!isDragging) return;
      
      const endX = e.changedTouches[0].clientX;
      const diff = startX - endX;
      
      if (Math.abs(diff) > 50) {
        if (diff > 0) {
          goToNext();
        } else {
          goToPrev();
        }
      }
      
      isDragging = false;
    });
    
    // Initialize
    updateCarousel();
    
    // Update on window resize
    window.addEventListener('resize', () => {
      const newVisibleCards = Math.floor(carousel.querySelector('.products-container').offsetWidth / cardWidth);
      const newMaxIndex = Math.max(0, cards.length - newVisibleCards);
      
      if (currentIndex > newMaxIndex) {
        currentIndex = newMaxIndex;
      }
      
      updateCarousel();
    });
  });
});
</script>

{% schema %}
{
  "name": "Product Carousel",
  "max_blocks": 3,
  "settings": [
    {
      "type": "header",
      "content": "Section Settings"
    }
  ],
  "blocks": [
    {
      "type": "category",
      "name": "Product Category",
      "settings": [
        {
          "type": "collection",
          "id": "collection",
          "label": "Collection"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Custom Title",
          "info": "Leave blank to use collection title"
        },
        {
          "type": "textarea",
          "id": "description",
          "label": "Custom Description",
          "info": "Leave blank to use collection description"
        },
        {
          "type": "checkbox",
          "id": "show_vendor",
          "label": "Show product vendor",
          "default": false
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Product Carousel",
      "blocks": [
        {
          "type": "category"
        }
      ]
    }
  ]
}
{% endschema %}